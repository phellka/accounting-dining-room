// <auto-generated />
using System;
using DiningRoomDatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiningRoomDatabaseImplement.Migrations
{
    [DbContext(typeof(DiningRoomDatabase))]
    [Migration("20220402082957_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Cook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorekeeperLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StorekeeperLogin");

                    b.ToTable("Cooks");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Cutlery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("WorkerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("WorkerLogin");

                    b.ToTable("Cutleries");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Lunch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("WorkerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkerLogin");

                    b.ToTable("Lunches");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.LunchOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LunchId")
                        .HasColumnType("int");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LunchId");

                    b.HasIndex("OrderId");

                    b.ToTable("LunchOrders");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.LunchProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LunchId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LunchId");

                    b.HasIndex("ProductId");

                    b.ToTable("LunchProducts");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calorie")
                        .HasColumnType("int");

                    b.Property<string>("Wishes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WorkerLogin");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorekeeperLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("StorekeeperLogin");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.ProductCooks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CookId")
                        .HasColumnType("int");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CookId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCooks");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Storekeeper", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Storekeepers");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Worker", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Cook", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Storekeeper", "Storekeeper")
                        .WithMany("Cooks")
                        .HasForeignKey("StorekeeperLogin");

                    b.Navigation("Storekeeper");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Cutlery", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiningRoomDatabaseImplement.Models.Worker", "Worker")
                        .WithMany("Cutleries")
                        .HasForeignKey("WorkerLogin");

                    b.Navigation("Order");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Lunch", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Worker", "Worker")
                        .WithMany("Lunches")
                        .HasForeignKey("WorkerLogin");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.LunchOrders", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Lunch", "Lunch")
                        .WithMany("LunchOrders")
                        .HasForeignKey("LunchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiningRoomDatabaseImplement.Models.Order", "Order")
                        .WithMany("LunchOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lunch");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.LunchProducts", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Lunch", "Lunch")
                        .WithMany("LunchProducts")
                        .HasForeignKey("LunchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiningRoomDatabaseImplement.Models.Product", "Product")
                        .WithMany("LunchProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lunch");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Order", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Worker", "Worker")
                        .WithMany("Orders")
                        .HasForeignKey("WorkerLogin");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Product", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Storekeeper", "Storekeeper")
                        .WithMany("Products")
                        .HasForeignKey("StorekeeperLogin");

                    b.Navigation("Storekeeper");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.ProductCooks", b =>
                {
                    b.HasOne("DiningRoomDatabaseImplement.Models.Cook", "Cook")
                        .WithMany("ProductCooks")
                        .HasForeignKey("CookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiningRoomDatabaseImplement.Models.Product", "Product")
                        .WithMany("ProductCooks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cook");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Cook", b =>
                {
                    b.Navigation("ProductCooks");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Lunch", b =>
                {
                    b.Navigation("LunchOrders");

                    b.Navigation("LunchProducts");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Order", b =>
                {
                    b.Navigation("LunchOrders");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Product", b =>
                {
                    b.Navigation("LunchProducts");

                    b.Navigation("ProductCooks");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Storekeeper", b =>
                {
                    b.Navigation("Cooks");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DiningRoomDatabaseImplement.Models.Worker", b =>
                {
                    b.Navigation("Cutleries");

                    b.Navigation("Lunches");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
